@page
@model RazorPagesGrades.Pages.Grade.IndexModel
@{
    ViewData["Title"] = "Grade manipulation";
}

<div class="row">
    <div class="col">
        <h1>Add, Edit, Delete grades</h1>
    </div>
</div>
<div class="jumbotron-fluid">
    <a asp-page="./Add" class="btn btn-primary">(+) grade Add</a>
</div>
@if (Model.MessageSuccess?.Length > 0)
{
    <div class="alert alert-success alert-dismissible fade show" role="alert">@TempData["MessageSuccess"]<button type="button" class="close" data-dismiss="alert" aria-label="Close"><span aria-hidden="true">&times;</span></button></div>
}
@if (Model.MessageError?.Length > 0)
{
    <div class="alert alert-warning alert-dismissible fade show" role="alert">@TempData["MessageError"]<button type="button" class="close" data-dismiss="alert" aria-label="Close"><span aria-hidden="true">&times;</span></button></div>
}
<div class="row">
    <div class="col">
        <table class="table table-striped table-responsive">
            <thead>
                <tr>
                    <th>@Html.DisplayNameFor(m => m.Grades[0].Acronym)</th>
                    <th>@Html.DisplayNameFor(m => m.Grades[0].Subject)</th>
                    <th>@Html.DisplayNameFor(m => m.Grades[0].ValWithMinus)</th>
                    <th>@Html.DisplayNameFor(m => m.Grades[0].WeightAlpha)</th>
                    <th></th>
                </tr>
            </thead>
            <tbody>
                @foreach (var item in Model.Grades)
                {
                    <tr>
                        <td>@item.Acronym</td>
                        <td>@item.Subject</td>
                        <td>@item.ValWithMinus</td>
                        <td>@item.WeightAlpha</td>
                        <td><a asp-page-handler="remove" asp-route-id="@item.Id" class="btn btn-outline-secondary">&times;</a></td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
</div>

